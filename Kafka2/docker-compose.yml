services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    command: >
      /bin/bash -c "
      /usr/bin/kafka-topics --bootstrap-server kafka:29092 --create --topic txn.commands --partitions 3 --replication-factor 1 &&
      /usr/bin/kafka-topics --bootstrap-server kafka:29092 --create --topic txn.events --partitions 3 --replication-factor 1 &&
      /usr/bin/kafka-topics --bootstrap-server kafka:29092 --create --topic txn.dlq --partitions 1 --replication-factor 1 &&
      tail -f /dev/null
      "

  api:
    build:
      context: ./api 
    container_name: api
    ports:
      - "3000:3000"
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERS: kafka:29092
      API_PORT: 3000
    restart: unless-stopped

  orchestrator:
    build:
      context: ./orchestrator 
    container_name: orchestrator
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERS: kafka:29092
    restart: unless-stopped

  gateway:
    build:
      context: ./gateway 
    container_name: gateway
    ports:
      - "8080:8080" 
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERS: kafka:29092
      WS_PORT: 8080
    restart: unless-stopped